name: Deploy EC2 Instance with Terraform

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      instance_ip: ${{ steps.ip.outputs.instance_ip }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_VAR_argocd_password: ${{ secrets.ARGOCD_PASSWORD }}
      TF_VAR_grafana_password: ${{ secrets.GRAFANA_PASSWORD }}
      TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        working-directory: terraform

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        working-directory: terraform

      - name: Get Instance IP
        id: ip
        run: |
          echo "instance_ip=$(terraform output -raw instance_public_ip)" >> $GITHUB_OUTPUT
        working-directory: terraform

      - name: Print Instance IP
        run: echo "The IP address of the instance is ${{ steps.ip.outputs.instance_ip }}"

  zap_scan:
    runs-on: ubuntu-latest
    needs: terraform
    name: Scan the webapplication
    permissions:
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Wait for application to be ready
        run: sleep 500
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://${{ needs.terraform.outputs.instance_ip }}:32000'
          cmd_options: '-a'